<?php

/**
 * This is the model base class for the table "projects".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Projects".
 *
 * Columns in table "projects" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $name
 * @property string $short_name
 * @property string $image
 * @property string $logo
 * @property string $icon
 * @property integer $type
 * @property string $params
 *
 */
abstract class BaseProjects extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'projects';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Projects|Projects', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('type', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>120),
			array('short_name', 'length', 'max'=>30),
			array('image, logo, icon', 'length', 'max'=>250),
			array('params', 'safe'),
			array('name, short_name, image, logo, icon, type, params', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, short_name, image, logo, icon, type, params', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'short_name' => Yii::t('app', 'Short Name'),
			'image' => Yii::t('app', 'Image'),
			'logo' => Yii::t('app', 'Logo'),
			'icon' => Yii::t('app', 'Icon'),
			'type' => Yii::t('app', 'Type'),
			'params' => Yii::t('app', 'Params'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('short_name', $this->short_name, true);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('logo', $this->logo, true);
		$criteria->compare('icon', $this->icon, true);
		$criteria->compare('type', $this->type);
		$criteria->compare('params', $this->params, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}